<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Player Registration - Malaysia Pickleball Association</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <link rel="stylesheet" href="/css/styles.css">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
  <style>
    .registration-hero {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      position: relative;
      overflow: hidden;
      padding-top: 7rem;
    }
    .registration-hero::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.1'%3E%3Ccircle cx='30' cy='30' r='2'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E") repeat;
      animation: float 20s infinite linear;
    }
    @keyframes float {
      0% { transform: translateX(0) translateY(0); }
      100% { transform: translateX(-60px) translateY(-60px); }
    }
    .form-card {
      backdrop-filter: blur(10px);
      background: rgba(255, 255, 255, 0.95);
    }
    .input-group {
      position: relative;
    }
    .input-group input,
    .input-group select,
    .input-group textarea {
      transition: all 0.3s ease;
    }
    .input-group input:focus,
    .input-group select:focus,
    .input-group textarea:focus {
      transform: translateY(-2px);
      box-shadow: 0 8px 25px rgba(0,0,0,0.1);
    }
    .profile-preview {
      width: 120px;
      height: 120px;
      border-radius: 50%;
      object-fit: cover;
      border: 4px solid #667eea;
    }
    .upload-area {
      border: 2px dashed #cbd5e1;
      border-radius: 12px;
      transition: all 0.3s ease;
    }
    .upload-area:hover {
      border-color: #667eea;
      background: rgba(102, 126, 234, 0.05);
    }
    .upload-area.drag-over {
      border-color: #667eea;
      background: rgba(102, 126, 234, 0.1);
    }
  </style>
</head>
<%
  const defaultBg = backgroundImage || '/images/defaultbg.png';
%>
<body class="bg-gray-100 bg-cover bg-center bg-fixed min-h-screen" style="background-image: url('<%= defaultBg %>')">
  <%- include('../partials/header') %>

  <!-- Hero Section -->
  <section class="registration-hero py-16 mb-8">
    <div class="container mx-auto px-4 text-center relative z-10">
      <h1 class="text-4xl md:text-6xl font-bold text-white mb-4">
        <i class="fas fa-user-plus mr-3"></i>
        Player Registration
      </h1>
      <p class="text-xl text-gray-200 mb-6">
        Join the Malaysia Pickleball Association and become an official registered player
      </p>
      <div class="flex justify-center items-center text-white space-x-6">
        <div class="text-center">
          <div class="text-3xl font-bold">FREE</div>
          <div class="text-sm">Registration</div>
        </div>
        <div class="text-center">
          <div class="text-3xl font-bold">INSTANT</div>
          <div class="text-sm">Unique ID</div>
        </div>
        <div class="text-center">
          <div class="text-3xl font-bold">OFFICIAL</div>
          <div class="text-sm">Membership</div>
        </div>
      </div>
    </div>
  </section>

  <main class="pb-12">
    <div class="container mx-auto px-4 max-w-4xl">
      
      <!-- Registration Form -->
      <div class="form-card rounded-2xl shadow-2xl p-8 mb-8">
        <div class="text-center mb-8">
          <h2 class="text-3xl font-bold text-gray-800 mb-2">
            <i class="fas fa-clipboard-list text-blue-600 mr-3"></i>
            Registration Form
          </h2>
          <p class="text-gray-600">Please fill in all required information to complete your registration</p>
        </div>

        <% if (typeof error !== 'undefined' && error) { %>
          <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-6">
            <i class="fas fa-exclamation-triangle mr-2"></i>
            <%= error %>
          </div>
        <% } %>

        <% if (typeof success !== 'undefined' && success) { %>
          <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded mb-6">
            <i class="fas fa-check-circle mr-2"></i>
            <%= success %>
          </div>
        <% } %>

        <form action="/player/register" method="POST" enctype="multipart/form-data" id="registrationForm">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            
            <!-- Personal Information -->
            <div class="md:col-span-2">
              <h3 class="text-xl font-semibold text-gray-800 mb-4 flex items-center">
                <i class="fas fa-user text-blue-600 mr-2"></i>
                Personal Information
              </h3>
            </div>

            <!-- Full Name -->
            <div class="input-group">
              <label for="fullName" class="block text-sm font-medium text-gray-700 mb-2">
                <i class="fas fa-user mr-2"></i>Full Name *
              </label>
              <input type="text" id="fullName" name="fullName" required
                     class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                     placeholder="Enter your full name as per IC">
            </div>

            <!-- Identity Card Number -->
            <div class="input-group">
              <label for="icNumber" class="block text-sm font-medium text-gray-700 mb-2">
                <i class="fas fa-id-card mr-2"></i>Identity Card Number *
              </label>
              <input type="text" id="icNumber" name="icNumber" required
                     pattern="^[0-9]{6}-[0-9]{2}-[0-9]{4}$"
                     class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                     placeholder="123456-78-9012 or 123456789012"
                     maxlength="14">
              <div id="icValidation" class="mt-1 text-xs hidden">
                <div id="icLoading" class="text-blue-600 hidden">
                  <i class="fas fa-spinner fa-spin mr-1"></i>Checking availability...
                </div>
                <div id="icAvailable" class="text-green-600 hidden">
                  <i class="fas fa-check-circle mr-1"></i>IC number is available for registration
                </div>
                <div id="icUnavailable" class="text-red-600 hidden">
                  <i class="fas fa-times-circle mr-1"></i><span id="icErrorMessage"></span>
                </div>
              </div>
              <p class="text-xs text-gray-500 mt-1">Enter IC number with or without dashes - will auto-format to 123456-78-9012. Each IC number can only be registered once.</p>
            </div>

            <!-- Age -->
            <div class="input-group">
              <label for="age" class="block text-sm font-medium text-gray-700 mb-2">
                <i class="fas fa-calendar-alt mr-2"></i>Age *
              </label>
              <input type="number" id="age" name="age" required min="12" max="100"
                     class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                     placeholder="25">
            </div>

            <!-- Phone Number -->
            <div class="input-group">
              <label for="phoneNumber" class="block text-sm font-medium text-gray-700 mb-2">
                <i class="fas fa-phone mr-2"></i>Phone Number *
              </label>
              <input type="tel" id="phoneNumber" name="phoneNumber" required
                     pattern="[0-9+\-\s()]*"
                     class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                     placeholder="+60123456789">
            </div>

            <!-- Email -->
            <div class="input-group md:col-span-2">
              <label for="email" class="block text-sm font-medium text-gray-700 mb-2">
                <i class="fas fa-envelope mr-2"></i>Email Address *
              </label>
              <input type="email" id="email" name="email" required
                     class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                     placeholder="your.email@example.com">
            </div>

            <!-- Address -->
            <div class="input-group md:col-span-2">
              <label for="address" class="block text-sm font-medium text-gray-700 mb-2">
                <i class="fas fa-map-marker-alt mr-2"></i>Address *
              </label>
              <textarea id="address" name="address" required rows="3"
                        class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                        placeholder="Enter your complete address"></textarea>
            </div>

            <!-- Account Information -->
            <div class="md:col-span-2 mt-6">
              <h3 class="text-xl font-semibold text-gray-800 mb-4 flex items-center">
                <i class="fas fa-key text-green-600 mr-2"></i>
                Account Information
              </h3>
            </div>

            <!-- Username -->
            <div class="input-group">
              <label for="username" class="block text-sm font-medium text-gray-700 mb-2">
                <i class="fas fa-user-circle mr-2"></i>Username *
              </label>
              <input type="text" id="username" name="username" required
                     pattern="[a-zA-Z0-9_]{3,20}"
                     class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                     placeholder="Choose a unique username">
              <p class="text-xs text-gray-500 mt-1">3-20 characters, letters, numbers, and underscores only</p>
            </div>

            <!-- Password -->
            <div class="input-group">
              <label for="password" class="block text-sm font-medium text-gray-700 mb-2">
                <i class="fas fa-lock mr-2"></i>Password *
              </label>
              <input type="password" id="password" name="password" required
                     minlength="6"
                     class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                     placeholder="Create a strong password">
              <p class="text-xs text-gray-500 mt-1">Minimum 6 characters</p>
            </div>

            <!-- Profile Picture -->
            <div class="md:col-span-2 mt-6">
              <h3 class="text-xl font-semibold text-gray-800 mb-4 flex items-center">
                <i class="fas fa-camera text-purple-600 mr-2"></i>
                Profile Picture
              </h3>
              
              <div class="flex flex-col md:flex-row items-start md:items-center gap-6">
                <!-- Preview -->
                <div class="text-center">
                  <img id="profilePreview" src="/images/default-avatar.png" alt="Profile Preview" 
                       class="profile-preview mx-auto mb-2" style="display: none;">
                  <div id="defaultAvatar" class="profile-preview mx-auto mb-2 bg-gray-200 flex items-center justify-center">
                    <i class="fas fa-user text-4xl text-gray-400"></i>
                  </div>
                  <p class="text-xs text-gray-500">Preview</p>
                </div>

                <!-- Upload Area -->
                <div class="flex-1">
                  <div class="upload-area p-6 text-center">
                    <input type="file" id="profilePicture" name="profilePicture" accept="image/*" class="hidden">
                    <div class="mb-4">
                      <i class="fas fa-cloud-upload-alt text-3xl text-gray-400 mb-2"></i>
                      <p class="text-gray-600 font-medium">Click to upload or drag and drop</p>
                      <p class="text-sm text-gray-500">PNG, JPG, JPEG up to 5MB</p>
                    </div>
                    <button type="button" onclick="document.getElementById('profilePicture').click()"
                            class="bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors">
                      <i class="fas fa-upload mr-2"></i>Choose File
                    </button>
                  </div>
                </div>
              </div>
            </div>

            <!-- Terms and Conditions -->
            <div class="md:col-span-2 mt-6">
              <div class="bg-gray-50 p-4 rounded-lg">
                <label class="flex items-start">
                  <input type="checkbox" id="terms" name="terms" required class="mt-1 mr-3">
                  <span class="text-sm text-gray-700">
                    I agree to the <a href="#" class="text-blue-600 hover:underline">Terms and Conditions</a> 
                    and <a href="#" class="text-blue-600 hover:underline">Privacy Policy</a> of Malaysia Pickleball Association. 
                    I understand that my registration is subject to admin approval and I will receive a notification once approved.
                  </span>
                </label>
              </div>
            </div>

            <!-- Submit Button -->
            <div class="md:col-span-2 mt-8">
              <button type="submit" id="submitBtn"
                      class="w-full bg-gradient-to-r from-blue-600 to-purple-600 text-white py-4 px-8 rounded-xl font-bold text-lg hover:from-blue-700 hover:to-purple-700 transition-all duration-300 transform hover:scale-105 shadow-lg">
                <i class="fas fa-paper-plane mr-3"></i>
                Submit Registration
              </button>
              <p class="text-center text-sm text-gray-500 mt-2">
                Your registration will be reviewed by our admin team within 24-48 hours
              </p>
            </div>

          </div>
        </form>
      </div>

      <!-- Benefits Section -->
      <div class="form-card rounded-2xl shadow-xl p-8">
        <h3 class="text-2xl font-bold text-gray-800 mb-6 text-center">
          <i class="fas fa-star text-yellow-500 mr-2"></i>
          Member Benefits
        </h3>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
          <div class="text-center">
            <div class="bg-blue-100 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4">
              <i class="fas fa-id-badge text-2xl text-blue-600"></i>
            </div>
            <h4 class="font-semibold text-gray-800 mb-2">Unique Player ID</h4>
            <p class="text-sm text-gray-600">Get your unique 5-character Player ID linked to your IC number</p>
          </div>
          <div class="text-center">
            <div class="bg-green-100 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4">
              <i class="fas fa-trophy text-2xl text-green-600"></i>
            </div>
            <h4 class="font-semibold text-gray-800 mb-2">Tournament Access</h4>
            <p class="text-sm text-gray-600">Register for official tournaments and competitions</p>
          </div>
          <div class="text-center">
            <div class="bg-purple-100 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4">
              <i class="fas fa-chart-line text-2xl text-purple-600"></i>
            </div>
            <h4 class="font-semibold text-gray-800 mb-2">Ranking System</h4>
            <p class="text-sm text-gray-600">Track your progress and national ranking</p>
          </div>
        </div>
      </div>

    </div>
  </main>

  <%- include('../partials/footer') %>
  <script src="/js/script.js"></script>
  <script>
    // Profile picture preview
    document.getElementById('profilePicture').addEventListener('change', function(e) {
      console.log('Profile picture input changed');
      const file = e.target.files[0];
      console.log('Selected file:', file);
      
      if (file) {
        // Check file size (5MB limit)
        if (file.size > 5 * 1024 * 1024) {
          alert('File size too large. Please choose a file smaller than 5MB.');
          this.value = '';
          return;
        }
        
        // Check file type
        const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png'];
        if (!allowedTypes.includes(file.type)) {
          alert('Invalid file type. Please choose a JPEG, JPG, or PNG image.');
          this.value = '';
          return;
        }
        
        console.log('File is valid, creating preview');
        const reader = new FileReader();
        reader.onload = function(e) {
          console.log('FileReader loaded successfully');
          const preview = document.getElementById('profilePreview');
          const defaultAvatar = document.getElementById('defaultAvatar');
          preview.src = e.target.result;
          preview.style.display = 'block';
          defaultAvatar.style.display = 'none';
          console.log('Preview updated');
        };
        reader.onerror = function(e) {
          console.error('FileReader error:', e);
          alert('Error reading file. Please try again.');
        };
        reader.readAsDataURL(file);
      }
    });

    // Drag and drop functionality
    const uploadArea = document.querySelector('.upload-area');
    
    uploadArea.addEventListener('dragover', (e) => {
      e.preventDefault();
      uploadArea.classList.add('drag-over');
    });

    uploadArea.addEventListener('dragleave', () => {
      uploadArea.classList.remove('drag-over');
    });

    uploadArea.addEventListener('drop', (e) => {
      e.preventDefault();
      uploadArea.classList.remove('drag-over');
      
      const files = e.dataTransfer.files;
      console.log('Files dropped:', files);
      
      if (files.length > 0) {
        const fileInput = document.getElementById('profilePicture');
        fileInput.files = files;
        fileInput.dispatchEvent(new Event('change'));
      }
    });

    // Form validation and submission
    document.getElementById('registrationForm').addEventListener('submit', function(e) {
      console.log('Form submitted');
      
      // Check if form is valid
      if (!this.checkValidity()) {
        console.log('Form validation failed');
        e.preventDefault();
        return;
      }
      
      const submitBtn = document.getElementById('submitBtn');
      submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin mr-3"></i>Processing...';
      submitBtn.disabled = true;
      
      // Log form data
      const formData = new FormData(this);
      console.log('Form data:');
      for (let [key, value] of formData.entries()) {
        if (key === 'profilePicture') {
          console.log(key + ':', value.name ? value.name + ' (' + value.size + ' bytes)' : 'No file');
        } else {
          console.log(key + ':', value);
        }
      }
    });

    // IC Number validation with auto-formatting
    let icCheckTimeout;
    let isIcValid = false;
    
    document.getElementById('icNumber').addEventListener('input', function() {
      let icNumber = this.value.trim();
      
      // Auto-format: Convert 12 digits to xxxxxx-xx-xxxx format
      if (/^[0-9]{12}$/.test(icNumber)) {
        icNumber = icNumber.substring(0, 6) + '-' + icNumber.substring(6, 8) + '-' + icNumber.substring(8, 12);
        this.value = icNumber;
      }
      
      // Remove any non-digit and non-dash characters
      icNumber = icNumber.replace(/[^0-9-]/g, '');
      
      // Ensure proper format as user types
      if (icNumber.length > 0 && !/^[0-9-]*$/.test(icNumber)) {
        icNumber = icNumber.replace(/[^0-9-]/g, '');
        this.value = icNumber;
      }
      
      // Auto-format partial input (add dashes at correct positions)
      if (/^[0-9]{6}$/.test(icNumber)) {
        this.value = icNumber + '-';
        icNumber = this.value;
      } else if (/^[0-9]{6}-[0-9]{2}$/.test(icNumber)) {
        this.value = icNumber + '-';
        icNumber = this.value;
      }
      
      const icRegex = /^[0-9]{6}-[0-9]{2}-[0-9]{4}$/;
      
      // Clear previous timeout
      if (icCheckTimeout) {
        clearTimeout(icCheckTimeout);
      }
      
      // Hide all validation messages
      hideAllIcMessages();
      
      // If empty or invalid format, don't check
      if (!icNumber || !icRegex.test(icNumber)) {
        isIcValid = false;
        updateSubmitButton();
        return;
      }
      
      // Show loading message
      showIcMessage('loading');
      
      // Debounce the API call
      icCheckTimeout = setTimeout(() => {
        checkIcAvailability(icNumber);
      }, 500);
    });
    
    // Handle paste events for IC number
    document.getElementById('icNumber').addEventListener('paste', function(e) {
      setTimeout(() => {
        // Trigger the input event after paste to apply formatting
        this.dispatchEvent(new Event('input'));
      }, 10);
    });
    
    async function checkIcAvailability(icNumber) {
      try {
        const response = await fetch(`/api/check-ic/${encodeURIComponent(icNumber)}`);
        const result = await response.json();
        
        hideAllIcMessages();
        
        if (result.available) {
          showIcMessage('available');
          isIcValid = true;
        } else {
          showIcMessage('unavailable', result.message);
          isIcValid = false;
        }
        
        updateSubmitButton();
      } catch (error) {
        console.error('Error checking IC availability:', error);
        hideAllIcMessages();
        showIcMessage('unavailable', 'Error checking IC number availability');
        isIcValid = false;
        updateSubmitButton();
      }
    }
    
    function hideAllIcMessages() {
      document.getElementById('icValidation').classList.add('hidden');
      document.getElementById('icLoading').classList.add('hidden');
      document.getElementById('icAvailable').classList.add('hidden');
      document.getElementById('icUnavailable').classList.add('hidden');
    }
    
    function showIcMessage(type, message = '') {
      document.getElementById('icValidation').classList.remove('hidden');
      
      if (type === 'loading') {
        document.getElementById('icLoading').classList.remove('hidden');
      } else if (type === 'available') {
        document.getElementById('icAvailable').classList.remove('hidden');
      } else if (type === 'unavailable') {
        document.getElementById('icErrorMessage').textContent = message;
        document.getElementById('icUnavailable').classList.remove('hidden');
      }
    }
    
    function updateSubmitButton() {
      const submitBtn = document.getElementById('submitBtn');
      if (isIcValid) {
        submitBtn.disabled = false;
        submitBtn.classList.remove('opacity-50', 'cursor-not-allowed');
      } else {
        submitBtn.disabled = true;
        submitBtn.classList.add('opacity-50', 'cursor-not-allowed');
      }
    }

    // Username availability check (placeholder for future implementation)
    document.getElementById('username').addEventListener('blur', function() {
      // Could add AJAX call to check username availability
      console.log('Username field blurred:', this.value);
    });

    // Initialize
    document.addEventListener('DOMContentLoaded', function() {
      console.log('Player registration form loaded');
      updateSubmitButton(); // Initially disable submit button
    });
  </script>
</body>
</html> 
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>API Keys Management - Malaysia Pickleball Association</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <link rel="stylesheet" href="/css/styles.css">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
  <style>
    .api-key-card {
      transition: all 0.3s ease;
      border-left: 4px solid #3B82F6;
    }
    .api-key-card:hover {
      transform: translateY(-2px);
      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
    }
    .copy-button {
      transition: all 0.2s ease;
    }
    .copy-button:hover {
      transform: scale(1.05);
    }
    .fade-in {
      animation: fadeIn 0.5s ease-in;
    }
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(20px); }
      to { opacity: 1; transform: translateY(0); }
    }
    .pulse-green {
      animation: pulseGreen 1s ease-in-out;
    }
    @keyframes pulseGreen {
      0%, 100% { background-color: #10b981; }
      50% { background-color: #34d399; }
    }
  </style>
</head>
<body class="bg-gray-50">
  <!-- Navigation -->
  <nav class="bg-white shadow-lg">
    <div class="max-w-7xl mx-auto px-4">
      <div class="flex justify-between">
        <div class="flex space-x-7">
          <div>
            <a href="/admin/dashboard" class="flex items-center py-4 px-2">
              <img src="/images/logo.png" alt="MPA Logo" class="h-8 w-8 mr-3">
              <span class="font-semibold text-gray-500 text-lg">Admin Panel</span>
            </a>
          </div>
        </div>
        <div class="flex items-center space-x-3">
          <span class="text-gray-500">Welcome, <%= session.username %></span>
          <a href="/logout" class="py-2 px-2 font-medium text-gray-500 hover:text-red-500 transition duration-300">
            <i class="fas fa-sign-out-alt"></i> Logout
          </a>
        </div>
      </div>
    </div>
  </nav>

  <div class="container mx-auto px-4 py-8">
    <!-- Breadcrumb -->
    <nav class="flex mb-8" aria-label="Breadcrumb">
      <ol class="inline-flex items-center space-x-1 md:space-x-3">
        <li class="inline-flex items-center">
          <a href="/admin/dashboard" class="inline-flex items-center text-sm font-medium text-gray-700 hover:text-blue-600">
            <i class="fas fa-home mr-2"></i>Dashboard
          </a>
        </li>
        <li>
          <div class="flex items-center">
            <i class="fas fa-chevron-right text-gray-400 mx-2"></i>
            <span class="ml-1 text-sm font-medium text-gray-500 md:ml-2">API Keys</span>
          </div>
        </li>
      </ol>
    </nav>

    <!-- Header -->
    <div class="bg-white rounded-lg shadow-md p-6 mb-8">
      <div class="flex justify-between items-center mb-4">
        <div>
          <h1 class="text-3xl font-bold text-gray-800">
            <i class="fas fa-key text-blue-600 mr-3"></i>API Keys Management
          </h1>
          <p class="text-gray-600 mt-2">Manage API keys for external integrations and unregistered player registration</p>
        </div>
        <button id="generateKeyBtn" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-6 rounded-lg transition duration-300 flex items-center">
          <i class="fas fa-plus mr-2"></i>Generate New API Key
        </button>
      </div>

      <!-- API Endpoint Information -->
      <div class="bg-blue-50 border-l-4 border-blue-400 p-4 mb-6">
        <div class="flex">
          <div class="flex-shrink-0">
            <i class="fas fa-info-circle text-blue-400"></i>
          </div>
          <div class="ml-3">
            <h3 class="text-sm font-medium text-blue-800">Unregistered Player API Endpoint</h3>
            <div class="mt-2 text-sm text-blue-700">
              <p><strong>Endpoint:</strong> <code class="bg-blue-100 px-2 py-1 rounded">POST /api/unregistered-player</code></p>
              <p><strong>Purpose:</strong> Register new players and generate MPA IDs automatically</p>
              <p><strong>Authentication:</strong> API key required in X-API-Key header</p>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- API Keys List -->
    <div class="bg-white rounded-lg shadow-md">
      <div class="p-6 border-b border-gray-200">
        <h2 class="text-xl font-semibold text-gray-800">Active API Keys</h2>
        <p class="text-gray-600 mt-1">Manage and monitor API key usage</p>
      </div>
      
      <div id="apiKeysList" class="p-6">
        <!-- API keys will be loaded here -->
        <div class="text-center py-8">
          <i class="fas fa-spinner fa-spin text-3xl text-gray-400 mb-4"></i>
          <p class="text-gray-600">Loading API keys...</p>
        </div>
      </div>
    </div>
  </div>

  <!-- Generate API Key Modal -->
  <div id="generateModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden">
    <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
      <div class="mt-3">
        <div class="flex items-center justify-between mb-4">
          <h3 class="text-lg font-medium text-gray-900">Generate New API Key</h3>
          <button id="closeModal" class="text-gray-400 hover:text-gray-600">
            <i class="fas fa-times"></i>
          </button>
        </div>
        
        <form id="generateForm">
          <div class="mb-4">
            <label class="block text-gray-700 text-sm font-bold mb-2">
              Description *
            </label>
            <input type="text" id="keyDescription" name="description" 
                   placeholder="e.g., External Registration System"
                   class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                   required>
          </div>
          
          <div class="mb-4">
            <label class="block text-gray-700 text-sm font-bold mb-2">
              Permissions
            </label>
            <div class="space-y-2">
              <div class="flex items-center">
                <input type="checkbox" id="unregisteredPlayerPerm" name="permissions" value="unregistered-player" class="mr-2">
                <label for="unregisteredPlayerPerm" class="text-sm">Unregistered Player Registration</label>
              </div>
              <div class="flex items-center">
                <input type="checkbox" id="playerDetailsPerm" name="permissions" value="player-details" class="mr-2">
                <label for="playerDetailsPerm" class="text-sm">Player Details Management</label>
              </div>
            </div>
            <p class="text-xs text-gray-500 mt-1">Select the permissions for this API key</p>
          </div>
          
          <div class="flex justify-end space-x-3">
            <button type="button" id="cancelBtn" class="px-4 py-2 text-gray-600 bg-gray-200 rounded-md hover:bg-gray-300">
              Cancel
            </button>
            <button type="submit" class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700">
              Generate Key
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>

  <!-- Success Modal -->
  <div id="successModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden">
    <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
      <div class="mt-3 text-center">
        <div class="mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-green-100 mb-4">
          <i class="fas fa-check text-green-600 text-xl"></i>
        </div>
        
        <h3 class="text-lg font-medium text-gray-900 mb-4">API Key Generated Successfully!</h3>
        
        <div class="mb-4">
          <label class="block text-gray-700 text-sm font-bold mb-2">Your API Key:</label>
          <div class="relative">
            <input type="text" id="generatedKey" readonly 
                   class="w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50 text-sm font-mono"
                   value="">
            <button id="copyKeyBtn" class="absolute right-2 top-2 text-gray-500 hover:text-blue-600">
              <i class="fas fa-copy"></i>
            </button>
          </div>
          <p class="text-xs text-red-600 mt-2">⚠️ Save this key securely. It won't be shown again!</p>
        </div>
        
        <button id="closeSuccessModal" class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700">
          Got it!
        </button>
      </div>
    </div>
  </div>

  <script>
    // DOM elements
    const generateKeyBtn = document.getElementById('generateKeyBtn');
    const generateModal = document.getElementById('generateModal');
    const successModal = document.getElementById('successModal');
    const closeModal = document.getElementById('closeModal');
    const cancelBtn = document.getElementById('cancelBtn');
    const closeSuccessModal = document.getElementById('closeSuccessModal');
    const generateForm = document.getElementById('generateForm');
    const apiKeysList = document.getElementById('apiKeysList');
    const copyKeyBtn = document.getElementById('copyKeyBtn');
    const generatedKey = document.getElementById('generatedKey');

    // Modal controls
    generateKeyBtn.addEventListener('click', () => {
      generateModal.classList.remove('hidden');
    });

    function closeModals() {
      generateModal.classList.add('hidden');
      successModal.classList.add('hidden');
    }

    closeModal.addEventListener('click', closeModals);
    cancelBtn.addEventListener('click', closeModals);
    closeSuccessModal.addEventListener('click', closeModals);

    // Copy API key to clipboard
    copyKeyBtn.addEventListener('click', async () => {
      try {
        await navigator.clipboard.writeText(generatedKey.value);
        copyKeyBtn.innerHTML = '<i class="fas fa-check text-green-600"></i>';
        copyKeyBtn.classList.add('pulse-green');
        setTimeout(() => {
          copyKeyBtn.innerHTML = '<i class="fas fa-copy"></i>';
          copyKeyBtn.classList.remove('pulse-green');
        }, 2000);
      } catch (err) {
        console.error('Failed to copy:', err);
      }
    });

    // Load API keys
    async function loadApiKeys() {
      try {
        const response = await fetch('/api/admin/api-keys');
        const data = await response.json();
        
        if (data.success) {
          displayApiKeys(data.data.apiKeys);
        } else {
          throw new Error(data.message);
        }
      } catch (error) {
        console.error('Error loading API keys:', error);
        apiKeysList.innerHTML = `
          <div class="text-center py-8">
            <i class="fas fa-exclamation-triangle text-3xl text-red-400 mb-4"></i>
            <p class="text-red-600">Failed to load API keys</p>
            <button onclick="loadApiKeys()" class="mt-2 text-blue-600 hover:text-blue-800">Try Again</button>
          </div>
        `;
      }
    }

    // Display API keys
    function displayApiKeys(keys) {
      if (keys.length === 0) {
        apiKeysList.innerHTML = `
          <div class="text-center py-8">
            <i class="fas fa-key text-6xl text-gray-300 mb-4"></i>
            <h3 class="text-xl text-gray-600 mb-2">No API Keys Yet</h3>
            <p class="text-gray-500 mb-4">Generate your first API key to start using the unregistered player API</p>
          </div>
        `;
        return;
      }

      const keysHtml = keys.map(key => `
        <div class="api-key-card bg-white border rounded-lg p-6 mb-4 fade-in">
          <div class="flex justify-between items-start">
            <div class="flex-1">
              <h3 class="text-lg font-semibold text-gray-800 mb-2">
                <i class="fas fa-key text-blue-600 mr-2"></i>
                ${escapeHtml(key.description)}
              </h3>
              
              <div class="space-y-2 text-sm text-gray-600">
                <div><strong>Key ID:</strong> <code class="bg-gray-100 px-2 py-1 rounded">${key.keyId}</code></div>
                <div><strong>Created by:</strong> ${escapeHtml(key.createdBy)}</div>
                <div><strong>Created:</strong> ${new Date(key.createdAt).toLocaleString()}</div>
                <div><strong>Last used:</strong> ${key.lastUsed ? new Date(key.lastUsed).toLocaleString() : 'Never'}</div>
                <div><strong>Permissions:</strong> 
                  <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                    ${key.permissions.join(', ')}
                  </span>
                </div>
              </div>
            </div>
            
            <div class="ml-4">
              <button onclick="revokeKey('${key.keyId}')" 
                      class="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded text-sm transition duration-300">
                <i class="fas fa-trash mr-1"></i>Revoke
              </button>
            </div>
          </div>
        </div>
      `).join('');

      apiKeysList.innerHTML = keysHtml;
    }

    // Generate API key
    generateForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const formData = new FormData(generateForm);
      
      // Get selected permissions
      const permissions = [];
      document.querySelectorAll('input[name="permissions"]:checked').forEach(checkbox => {
        permissions.push(checkbox.value);
      });
      
      if (permissions.length === 0) {
        alert('Please select at least one permission');
        return;
      }
      
      const data = {
        description: formData.get('description'),
        permissions: permissions
      };

      try {
        const response = await fetch('/api/admin/generate-api-key', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data)
        });

        const result = await response.json();
        
        if (result.success) {
          generatedKey.value = result.data.apiKey;
          generateModal.classList.add('hidden');
          successModal.classList.remove('hidden');
          
          // Reset form and reload keys
          generateForm.reset();
          setTimeout(loadApiKeys, 1000);
        } else {
          throw new Error(result.message);
        }
      } catch (error) {
        console.error('Error generating API key:', error);
        alert('Failed to generate API key: ' + error.message);
      }
    });

    // Revoke API key
    async function revokeKey(keyId) {
      if (!confirm('Are you sure you want to revoke this API key? This action cannot be undone.')) {
        return;
      }

      try {
        const response = await fetch(`/api/admin/api-keys/${keyId}`, {
          method: 'DELETE'
        });

        const result = await response.json();
        
        if (result.success) {
          loadApiKeys(); // Reload the list
        } else {
          throw new Error(result.message);
        }
      } catch (error) {
        console.error('Error revoking API key:', error);
        alert('Failed to revoke API key: ' + error.message);
      }
    }

    // Utility function to escape HTML
    function escapeHtml(text) {
      const div = document.createElement('div');
      div.textContent = text;
      return div.innerHTML;
    }

    // Load API keys on page load
    document.addEventListener('DOMContentLoaded', loadApiKeys);
  </script>
</body>
</html>